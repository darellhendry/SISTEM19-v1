{"version":3,"sources":["page/Home.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","index_es","container","justify","item","variant","React","Component","Container","state","mobileOpen","onPage","handleDrawerToggle","_this","setState","handleClick","text","url","window","location","toString","split","param","length","this","charAt","toUpperCase","slice","_this2","_this$props","props","classes","theme","navIcon","Home_default","color","About","Face_default","Contact","Contacts_default","drawer","className","toolbar","Divider_default","List_default","map","index","Link","key","style","textDecoration","to","concat","toLowerCase","onClick","ListItem_default","button","ListItemIcon_default","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","Typography_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","open","onClose","paper","drawerPaper","xsDown","content","Switch","Route","path","component","withStyles","display","Object","defineProperty","breakpoints","up","width","flexShrink","marginLeft","marginRight","mixins","flexGrow","padding","spacing","unit","withTheme","App","esm_extends","BrowserRouter","src_Container","Boolean","hostname","match","createMuiTheme","palette","type","main","secondary","typography","useNextVariants","ReactDOM","render","core_styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c3b60a6.chunk.js","sourcesContent":["import React from 'react'\nimport {Typography, Grid} from '@material-ui/core';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Grid container justify='center'>\n        <Grid item>\n          <Typography variant='h2'>Hey There, Welcome to My Website</Typography>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nexport default Home\n","\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FaceIcon from '@material-ui/icons/Face';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link, Switch, Route } from 'react-router-dom'\nimport Home from './page/Home'\nconst drawerWidth = 240;\n\nconst styles = theme => {\n  return ({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n      },\n    },\n    menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n    },\n  });\n}\n\nclass Container extends React.Component {\n  state = {\n    mobileOpen: false,\n    onPage: ''\n  };\n\n  componentWillMount() {\n    const url = window.location.toString().split('/')\n    const param = url[url.length - 1]\n    this.setState({onPage: param === 'profile'?'Home':param.charAt(0).toUpperCase() + param.slice(1)})\n  }\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n  handleClick = (text) => {\n    this.setState({onPage: text})\n  }\n  render() {\n    const { classes, theme } = this.props\n    const navIcon = {\n      Home: <HomeIcon color='secondary'/>,\n      About: <FaceIcon color='secondary' />,\n      Contact: <ContactsIcon color='secondary'/>\n    }\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Home', 'About', 'Contact'].map((text, index) => (\n            <Link key={text} style={{textDecoration:'none'}} to={`/${text === 'Home'?'':text}`.toLowerCase()} onClick={() => this.handleClick(text)}>\n              <ListItem button key={text}>\n                <ListItemIcon>{navIcon[text]}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </div>\n    );\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar} color='primary'>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {this.state.onPage}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route path='/' component={Home}/>\n            <Route path='/about' component={Home}/>\n            <Route path='/contact' component={Home}/>\n            <Route path='/notfound' component={Home}/>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles, { withTheme: true })(Container);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './Container'\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    const {...props} = this.props\n    return (\n      <BrowserRouter>\n        <Container />\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type:'dark',\n    primary:{\n      main: '#05668d'\n    },\n    secondary: {\n      main:'#a5be00'\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\nfunction MyApp(){\n    return (\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    )\n}\n\nReactDOM.render(<MyApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}